/**
 * Created by yhtut on 13/11/15.
 */'use strict';Object.defineProperty(exports, '__esModule', { value: true }); // istanbul ignore next
var _createClass = (function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};})(); // istanbul ignore next
var _get = function get(_x, _x2, _x3) {var _again = true;_function: while (_again) {var object = _x, property = _x2, receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {var parent = Object.getPrototypeOf(object);if (parent === null) {return undefined;} else {_x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;}} else if ('value' in desc) {return desc.value;} else {var getter = desc.get;if (getter === undefined) {return undefined;}return getter.call(receiver);}}}; // istanbul ignore next
function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { 'default': obj };} // istanbul ignore next
function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError('Cannot call a class as a function');}} // istanbul ignore next
function _inherits(subClass, superClass) {if (typeof superClass !== 'function' && superClass !== null) {throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var _react = require('react');var _react2 = _interopRequireDefault(_react);var EventComponent = (function (_React$Component) {_inherits(EventComponent, _React$Component);
    function EventComponent(props) {_classCallCheck(this, EventComponent);
        _get(Object.getPrototypeOf(EventComponent.prototype), 'constructor', this).call(this, props);}












    //propTypes come from react
    //good pratise
    _createClass(EventComponent, [{ key: 'render', value: function render() {return _react2['default'].createElement('div', { className: 'event-component' }, _react2['default'].createElement('h2', null, this.props.title), _react2['default'].createElement('p', null, 'Date: ', this.props.date), _react2['default'].createElement('p', null, this.props.description));} }]);return EventComponent;})(_react2['default'].Component);
EventComponent.propTypes = { 
    title: _react2['default'].PropTypes.string.isRequired, 
    date: _react2['default'].PropTypes.string.isRequired, 
    description: _react2['default'].PropTypes.string.isRequired };exports['default'] = 


EventComponent;module.exports = exports['default'];